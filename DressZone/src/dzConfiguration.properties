dz.db.path=D:/java/dressZone/database/dzdbdev
dz.db.user=dzadmin
dz.db.pass=dzSecreT

dz.image.dir.school=D:/java/dressZone/school
dz.image.dir.dress=products




# CREATE TABLE CUSTOMER_PROFILE (CUSTOMER_ID VARCHAR2(32), FIRST_NAME VARCHAR2(99), LAST_NAME VARCHAR2(99), EMAIL VARCHAR2(99), MOBILE VARCHAR2(15), DATE_OF_BIRTH DATE, PRIMARY KEY (CUSTOMER_ID));
# CREATE TABLE CUST_CRED (CUSTOMER_ID VARCHAR2(32), LOGIN_SECRET VARCHAR2(99), PRIMARY KEY (CUSTOMER_ID), FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER_PROFILE(CUSTOMER_ID));
# CREATE TABLE CUST_SEC_QUES (CUSTOMER_ID VARCHAR2(32), SEC_QUES VARCHAR2, ANSWER VARCHAR2, PRIMARY KEY (CUSTOMER_ID), FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER_PROFILE(CUSTOMER_ID));
# CREATE TABLE SESSION_HISTORY( CUSTOMER_ID VARCHAR2(32), LAST_SUCCESS DATE, LAST_FAILED DATE, FAILURE_COUNT INTEGER, PRIMARY KEY (CUSTOMER_ID), FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER_PROFILE(CUSTOMER_ID));
# CREATE TABLE SCHOOL_PROFILE(SCHOOL_ID VARCHAR2(10), SCHOOL_NAME VARCHAR2(99), CITY VARCHAR2(99), PINCODE VARCHAR2(6), ADDRESS VARCHAR2, ABOUT_SCHOOL VARCHAR2, PRIMARY KEY(SCHOOL_ID));
# CREATE TABLE IMAGES (OBJECT_ID VARCHAR2(10), IMAGE_NAME VARCHAR2(18), PRIMARY KEY (IMAGE_NAME));
# CREATE TABLE PRODUCT (PRODUCT_ID VARCHAR2(10), SHORT_DESCRIPTION VARCHAR2(64), DESCRIPTION VARCHAR2, GENDER CHAR, SIZE_LIST VARCHAR2(50), SEASON VARCHAR2(16), PRICE INTEGER, TAGS VARCHAR2(128), COLOR VARCHAR2(64), PRIMARY KEY (PRODUCT_ID));
# CREATE TABLE DRESS_FOR_SCHOOL (SCHOOL_ID VARCHAR2(10), PRODUCT_ID VARCHAR2(10), SIZE VARCHAR2(10), AVAILABILITY CHAR, PRIMARY KEY (SCHOOL_ID,PRODUCT_ID), FOREIGN KEY (SCHOOL_ID) REFERENCES SCHOOL_PROFILE(SCHOOL_ID), FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID));
# CREATE TABLE ADDRESS (ADDRESS_ID VARCHAR2(10), CUSTOMER_ID VARCHAR2(10), ADDRESS_1 VARCHAR2(128), ADDRESS_2 VARCHAR2(128), LOCALITY VARCHAR2(32), CITY VARCHAR2(64), PINCODE VARCHAR(6), LANDMARK VARCHAR2(99), MOBILE_1 VARCHAR2(15), MOBILE_2 VARCHAR2(15), PRIMARY KEY (ADDRESS_ID), FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER_PROFILE(CUSTOMER_ID));
# CREATE TABLE ORDER_BOOK (ORDER_NUMBER VARCHAR2(13), CUSTOMER_ID VARCHAR2(10), ADDRESS_ID VARCHAR2(10), PRODUCT_ID VARCHAR2(10), UNITS INTEGER, STATUS CHAR, PAYMENT_MODE CHAR(2), ORDER_TIME TIMESTAMP, PRIMARY KEY (ORDER_NUMBER), FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER_PROFILE(CUSTOMER_ID), FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID), FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID));
# CREATE TABLE ORDER_TRACKING (ORDER_NUMBER VARCHAR2(13), LAST_UPDATED TIMESTAMP, ACTION VARCHAR2(10), REMARK VARCHAR2(256), FOREIGN KEY (ORDER_NUMBER) REFERENCES ORDER_BOOK(ORDER_NUMBER));
# CREATE TABLE FEEDBACK (PRODUCT_ID VARCHAR2(10), CUSTOMER_ID VARCHAR2(10), RATING INT(1), COMMENT VARCHAR2, FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID), FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER_PROFILE(CUSTOMER_ID));
